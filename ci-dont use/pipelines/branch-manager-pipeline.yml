resources:
- name: concourse-branch-manager
  type: git
  source:
    uri: https://github.com/pivotaltracker/concourse-branch-manager.git
    branch: master
    ignore_paths: [Gemfile, Gemfile.lock]

# This `git-branches` input resource determines which branches will be processed
- name: branch-manager-git-branches
  type: git-branches
  source:
    # Set this to the uri of your repo for which you want to dynamically build arbitrary branches
    uri: {{github-uri}}
#    branch_regexp: "^(feature|story|bug|chore)/.*"
    max_branches: 10
    private_key: {{github-private-key}}

# Build Image resource - a docker image build for running both java and Node Applications on Pipeline
- name: build-image
  type: docker-image
  source:
    repository: {{docker-image-repo}}
    tag: {{docker-image-tag}}

# This repo containing your resource/job templates and any non-secret
# non-credential config that needs to be passed into your generated pipeline
# via fly --load-vars-from options. can be the same repo as
# the one in the git-branches resource above, but it doesn't have to be
- name: branch-manager-ci-repo
  type: git
  source:
    # Set this to the uri of your repo containing your resource/job templates for building branches
    uri: {{github-uri}}
    branch: mybranch
    private_key: {{github-private-key}}

# This repo contains any secret credential config that needs to be
# passed into your generated pipeline via fly --load-vars-from options
- name: branch-manager-credentials
  type: git
  source:
    # Set this to the uri of your repo containing your non-secret non-credential config
    uri: {{github-credentials-uri}}
    branch: master
    private_key: {{github-private-key}}

- name: master
  type: git
  source:
    uri: {{github-uri}}
    branch: master
    private_key: {{github-private-key}}

- name: two-weeks
  type: time
  source: {interval: 336h}

- name: gh-release
  type: github-release
  source:
    owner: {{github-org-name}}
    repository: {{github-repo-name}}
    github_api_url: https://github.com/api/v3/
    access_token: {{github-token}}

- name: pcf-np
  type: cf
  source:
    api: https://api.run-np.homedepot.com
    username: {{cf-user}}
    password: {{cf-password}}
    organization: {{cf-org}}
    space: {{cf-space}}

- name: cr-resource
  type: change-request
  source:
    url: {{cr-snowfield-url}}

resource_types:
- name: git-branches
  type: docker-image
  source:
    repository: tracker/git-branches-resource

- name: change-request
  type: docker-image
  source:
    repository: docker.artifactory.homedepot.com/snowfield-resource

jobs:
- name: branch-manager
  serial: true
  plan:
  - get: concourse-branch-manager
    params: {depth: 20}
    trigger: true
  - get: git-branches
    resource: branch-manager-git-branches
    trigger: true
  - get: template-repo
    resource: branch-manager-ci-repo
    trigger: true
  - get: credentials-repo
    resource: branch-manager-credentials
    params: {depth: 20}
    trigger: true
  - get: config-repo
    resource: branch-manager-ci-repo
    params: {depth: 20, submodules: none}
    trigger: true
  - task: manage-branches
    file: concourse-branch-manager/tasks/manage-branches.yml
    params:
      BRANCH_RESOURCE_TEMPLATE: template-repo/ci/pipelines/templates/branch-resource-template.yml.erb
      BRANCH_JOB_TEMPLATE: template-repo/ci/pipelines/templates/branch-job-template.yml.erb
      PIPELINE_COMMON_RESOURCES_TEMPLATE: template-repo/ci/pipelines/templates/common-resources-template.yml.erb
      CONCOURSE_URL: {{concourse-url}}
      CONCOURSE_USERNAME: {{CONCOURSE_USERNAME}}
      CONCOURSE_PASSWORD: {{CONCOURSE_PASSWORD}}
      CONCOURSE_TEAM: branch-manager
      PIPELINE_LOAD_VARS_FROM_1: config-repo/branch-manager-config.yml
      PIPELINE_LOAD_VARS_FROM_2: credentials-repo/branch-manager-credentials.yml
      GROUP_PER_BRANCH: true

- name: Security Scan
  max_in_flight: 1
  plan:
  - get: code-src
    resource: master
  - get: two-weeks
    trigger: true
  - get: build-image
  - task: security scan
    image: build-image
    file: code-src/ci/tasks/security-scan.yml
    params:
      PROJECT_NAME: {{fortify-name}}
      PROJECT_VERSION: {{fortify-version}}
      FORTIFY_TOKEN: {{fortify-token}}
      EMAIL: {{fortify-email}}
      SRC_FOLDER: ../code-src/src
      SERVER_FOLDER: ../code-src/server
      PROJECT_LAN: {{project-language}}

- name: Create Release
  max_in_flight: 1
  disable_manual_trigger: true
  plan:
  - get: code-src
    resource: master
    trigger: true
  - task: Release setup via flow
    file: code-src/ci/tasks/flow-release-setup.yml
    params:
      ENVIRONMENT: production
      GITHUB_TOKEN: {{github-token}}
      TRACKER_TOKEN: {{tracker-token}}
  - task: get build number from pull request
    file: code-src/ci/tasks/get-build-number.yml
    params:
      GITHUB_ORG: {{github-org-name}}
      GITHUB_REPO: {{github-repo-name}}
      GITHUB_API_URL: https://github.com/api/v3/
      GITHUB_TOKEN: {{github-token}}
  - task: Update quality hub with version number
    file: code-src/ci/tasks/set-quality-hub-version.yml
    params:
      VERSION_FILE: version/version-number
      QHUB_EXECUTION_ID_FILE: build-number/build-number
      QHUB_TOKEN: {{qualityhub-token}}
      QHUB_APP_NAME: {{qualityhub-application-name}}
      QHUB_SET_NAME: Create Release
      QHUB_JOB_NAME: Create Release
      QHUB_JOB_STATUS: COMPLETED
      BRANCH: master
      GITHUB_USER: {{github-user}}
      GITHUB_TOKEN: {{github-token}}
      GITHUB_ORG: {{github-org-name}}
      GITHUB_REPO: {{github-repo-name}}
  - put: gh-release
    params:
      name: version/version-number
      tag: version/version-number
      body: version/notes

- name: Deploy to Non Prod
  max_in_flight: 1
  plan:
  - get: code-src
    resource: master
    passed: [Artifact Promotion]
    trigger: true
  - task: get build number from pull request
    file: code-src/ci/tasks/get-build-number.yml
    params:
      GITHUB_ORG: {{github-org-name}}
      GITHUB_REPO: {{github-repo-name}}
      GITHUB_API_URL: https://github.com/api/v3/
      GITHUB_TOKEN: {{github-token}}
  - task: pull from artifactory
    file: code-src/ci/tasks/pull-from-artifactory.yml
    input_mapping:
      build-resource: build-number
    params:
      BUILD_NUMBER_FILE: build-resource/build-number
      BUILD_NAME: {{github-repo-name}}
      PROJECT_LANGUAGE: {{project-language}}
  - put: pcf-np
    params:
      manifest: code-src/prod.manifest.yml
      path: {{artifact-pattern}}

- name: Artifact Promotion
  max_in_flight: 1
  disable_manual_trigger: true
  plan:
  - get: code-src
    passed: [Create Release]
    resource: master
    trigger: true
  - get: gh-release
    passed: [Create Release]
  - task: get build number from pull request
    file: code-src/ci/tasks/get-build-number.yml
    params:
      GITHUB_ORG: {{github-org-name}}
      GITHUB_REPO: {{github-repo-name}}
      GITHUB_API_URL: https://github.com/api/v3/
      GITHUB_TOKEN: {{github-token}}
  - task: Promote artifact
    file: code-src/ci/tasks/artifact-promotion.yml
    params:
      BUILD_NUMBER_FILE: build-number/build-number
      ARTIFACTORY_TOKEN: {{artifactory-token}}
      ARTIFACTORY_USER: {{artifactory-username}}
      ARTIFACTORY_API_URL: https://maven.artifactory.homedepot.com/artifactory/api
      VERSION_FILE: gh-release/version
      GITHUB_ORG: {{github-org-name}}
      GITHUB_REPO: {{github-repo-name}}
      GITHUB_API_URL: https://github.com/api/v3/
      GITHUB_TOKEN: {{github-token}}

- name: Create Change Request
  max_in_flight: 1
  plan:
  - get: code-src
    passed: [Artifact Promotion]
    resource: master
  - get: gh-release
  - put: cr-resource
    params:
      template: {{cr-template}}
      assigned_to: {{cr-assigned-to}}
      description_path: gh-release/body
