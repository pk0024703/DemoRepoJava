#!/bin/bash

echo "Assemble code & upload artifact..."

pr_number=$(cat ../$PULL_REQUEST_NUMBER_FILE)

if [[ -z $pr_number ]]
then
  echo "No Pull Request number found."
  exit 11
fi

echo "Pull Request Number: #${pr_number}"
echo

if [[ ! -z $BUILD_NUMBER_FILE ]]
then
  build_number=$(cat ../$BUILD_NUMBER_FILE)
  if [[ -z $build_number ]]
  then
    echo "Build Number File specified, but no build number found."
    exit 11
  fi

  echo "Specifying Build Number: #${build_number}"
  echo
  build_number="-PbuildNumber=$build_number"
fi

echo "Running gradle..."
echo "---"
exec 5>&1
gradlew_output=$(./gradlew --build-file ./build.gradle assemble artifactoryPublish -Pversion="$(cat ../$VERSION_FILE)" $build_number | tee >(cat - >&5)); gradlew_return_code=$?
echo "---"

if [[ "${gradlew_return_code}" != "0" ]]
then
  echo
  echo "Gradel failed with exit status ${gradlew_return_code}"
  echo
  exit 12
else

  IFS=$'\n' LINES=($gradlew_output)

  for element in "${!LINES[@]}"
  do
    if [[ "${LINES[element]}" =~ (https:\/\/.*\/webapp\/builds\/.*\/[[:digit:]]+) ]]
    then
      build_url="${BASH_REMATCH[1]}"
    fi
  done

  if [[ -z $build_url ]]
  then
    echo "Failed to get build url."
    echo
    exit 13
  else

    echo "Artifact URL: ${build_url}"
    echo

    HEAD=$(git show-ref --heads | sed -e 's?.* refs/heads/??')
    ORG=$(echo $OWNER_REPO | awk '{split($0,a,"/"); print a[1]}')

    the_pull_request=$(curl --silent -u $GITHUB_USER:$GITHUB_TOKEN -X GET \
    https://github.homedepot.com/api/v3/repos/$OWNER_REPO/pulls/$pr_number \
    -H 'content-type: application/json')

    target_status_url=$(echo "${the_pull_request}" | \
       grep -m 1 "\"statuses_url" | \
       awk '{split($0,a,"\"statuses_url\":"); print a[2]}' | \
       awk '{split($0,a,","); print a[1]}'  | \
       awk '{gsub(/"/, "",$0); print $0}' | \
       awk '{ gsub (" ", "", $0); print $0}')

    echo "Attempting to add status to Github API URL ${target_status_url}"
    echo

    response=$(curl --write-out %{http_code} --silent --output /dev/null -u $GITHUB_USER:$GITHUB_TOKEN -X POST \
      $target_status_url \
      -H 'content-type: application/json' \
      -d "{
      \"state\": \"success\",
      \"target_url\": \"${build_url}\",
      \"description\": \"Artifact Upload\",
      \"context\": \"artifactPublish\"
    }")

    if [[ "$response" != "201" ]]
    then
      echo "Failed to create status."
      echo "HTTP Status: ${response}"
      exit 14
    else
      echo "Status creation successful"
    fi

  fi

fi
