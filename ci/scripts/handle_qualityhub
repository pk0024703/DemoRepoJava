#!/bin/bash
set -e

# Needed to communicate with Quality Hub
export https_proxy=http://thd-svr-proxy-qa.homedepot.com:7070
export http_proxy=http://thd-svr-proxy-qa.homedepot.com:7070
unset no_proxy

qHubCurlCommand="curl -X POST \\
  http://api-cipipeline.sqhub.homedepot.com/buildpipeline/publish \\
  -v \\
  -H 'X-Auth-Token: $QHUB_TOKEN' \\
  -H 'X-MyApplication-API-Key: $QHUB_APP_NAME' \\
  -F applicationName='$QHUB_APP_NAME' \\
  -F jobSetName='$QHUB_SET_NAME' \\
  -F jobName='$QHUB_JOB_NAME'"


if [[ -z "${QHUB_EXECUTION_ID_FILE// }" ]]
then

  echo "QHUB_EXECUTION_ID_FILE not set"
  exit 1

else

  execution_id=$(cat ../$QHUB_EXECUTION_ID_FILE)

  if [[ -z ${execution_id} ]]
  then

    echo "No Execution ID found."
    exit 1

  else

    qHubCurlCommand="$qHubCurlCommand \\
     -F pipelineExecutionId='$execution_id'"

    echo
    echo "Execution ID: $execution_id"

  fi
fi

if [ -d "../test-results" ]; then
  echo
  echo "Tarring test results..."
  find ../test-results -name "*.xml" | tar -zcvaf ../test-results/results.tar.gz -T -

  testFilePath=$(readlink -f ../test-results/results.tar.gz)

  qHubCurlCommand="$qHubCurlCommand \\
   -F testType='UNIT' \\
   -F file=@\"$testFilePath\""
fi

if [[ -z "${BRANCH// }" ]]
then
  qHubCurlCommand="$qHubCurlCommand \\
  -F deploymentEnvironment='unspecified'"
else
  qHubCurlCommand="$qHubCurlCommand \\
    -F deploymentEnvironment='$BRANCH'"
fi

if [[ -z "${QHUB_JOB_STATUS// }" ]]
then
  qHubCurlCommand="$qHubCurlCommand \\
    -F jobExecutionStatus=STARTED"
else
  qHubCurlCommand="$qHubCurlCommand \\
    -F jobExecutionStatus='$QHUB_JOB_STATUS'"
fi

if [[ -z "${VERSION_FILE// }" ]]
then
  qHubCurlCommand="$qHubCurlCommand \\
    -F version=TBD"
else
  version_number=$(cat ../$VERSION_FILE)
  qHubCurlCommand="$qHubCurlCommand \\
    -F version=${version_number//}"
fi

qhub_response=$(eval "$qHubCurlCommand")

echo $qhub_response
